<% 
# Create the query string for submitting measurements for all variables
vquery = ''               
  i = 0                   
  vquery = '&'            
  @varnames.each do |v|
    vquery += v[0] 
    vquery += '='
    vquery += v[1].gsub(/\s+/, "")
    if i < @varnames.count-1        
      vquery += '&'       
    end                   
    i = i + 1             
  end
%>

<h1>CHORDS Data URLs</h1>

<div>
<strong>URLs for data ingest and download</strong>
<br/>
<strong>Instrument: <%= @instrument.name %> (id: <%= @instrument.id %>)</strong>
<br/>
Although this example is for a specific instrument, the syntax is common to all of them. <i>instrument_id</i>
specifies the instrument. For putting data, there is a list of variable short names with their corresponding 
measurement value. All of the qualifiers (i.e. the fields following "?" and "&") are order independent.
<br/>
<br/>
<div class="table-responsive">
  <table  class="table table-striped">
    <tr>
    <th>Action</th><th>URL format</th><th>Qualifiers</th><th>Example</th>
    </tr>
    <tr>
    <td>Put data</td><td></td><td>at, key, test</td>
    <td><% if @varnames.count > 0 %>
      <%= url_for(:only_path => false,  :controller => 'measurements', :action => 'url_create', :instrument_id => @instrument.id) %><%= vquery %>&at=2015-08-20T19:50:28&key=KeyValue&test
    <% end %></td>
     </tr>
    
    <tr>
    <td>Fetch a CSV file</td><td>.csv</td><td>start, end, last</td>
    <td><% if @varnames.count > 0 %>
      <%= url_for(:only_path => false,  :controller => 'instruments', :action => 'show', :id => @instrument.id) %>.csv?start=2015-08-01T00:30&end=2015-08-20T12:30
    <% end %></td>
    </tr>
    
    <tr>
    <td>Fetch a JSON file</td><td>.jsf</td><td>start, end, last</td>
    <td><% if @varnames.count > 0 %>
      <%= url_for(:only_path => false,  :controller => 'instruments', :action => 'show', :id => @instrument.id) %>.jsf
    <% end %></td>
    </tr>
    
    <tr>
    <td>Fetch JSON</td><td>.json</td><td>start, end, last</td>
    <td><% if @varnames.count > 0 %>
      <%= url_for(:only_path => false,  :controller => 'instruments', :action => 'show', :id => @instrument.id) %>.json?last
    <% end %></td>
   </tr>
  </table>
</div>

<div class="table-responsive">
  <table  class="table table-striped">
  <tr>
  <th>Optional<br/>Qualifiers</th><th>Meaning</th>
  </tr>
  <tr>
  <td>at=<i>time</i></td><td>A time to assign to the measurement. If not present, the measurement will 
  be time stamped with the time that it was received by the portal.</td>
  </tr>
  <tr>
  <td>key=<i>key</i></td><td>An optional validation key. It is required if "Require the security key in order to submit a measurement"
  is checked in the configuration. The key value is also specified in the configuration.</td>
  </tr>
  <tr>
  <td>test</td><td>If present, this measurement will be marked as a test value.
  Test values can be deleted from the database using the "Delete Test Button" on the instrument page.</td>
  </tr>
  <tr>
  <td>start=<i>time</i></td><td>A start time for the returned measurements.</td>
  </tr>
  <tr>
  <td>end=<i>time</i></td><td>An end time for the returned measurements.</td>
  </tr>
  <tr>
  <td>last</td><td>Return all measurements for the most recent measurement time stamp.</td>
  </tr>
  </table>
</div>
<ul style="margin-top: 0">
<li>The optional qualifier section begins with a "?", followed by one or more qualifiers. Each is separated by "&".
Some qualifiers (e.g. at, start and end) have an associated value.
<li>Time qualifiers (at, start and end) are in ISO8061 format.</li>
<li>If none of the time qualifiers are present for a data fetch, measurements for the current day are returned.</li>
</ul>
</div>
